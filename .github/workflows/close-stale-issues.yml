name: Close Issues with Status Stale Label

on:
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight
  workflow_dispatch:    # Allows manual triggering

jobs:
  close-issues:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v2

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Close Issues
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LABEL_NAME: 'Status: Stale'
        CUSTOM_MESSAGE: 'Appologies that we were unable to address this issue in a timely manner! Given that we have millions of free users this has been a challenge that we are working on over time. This issue is being closed in order to allow us to focus on resolving more recently active issues. If this issue is still meaningful, please feel free to comment an update and re-open the issue for troubleshooting! Thanks for your continued loyalty to the StackBlitz platform over the years!'
      run: |
        page=1
        while : ; do
          # Fetch a page of issues with the specific label
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/$GITHUB_REPOSITORY/issues?state=open&labels=$LABEL_NAME&per_page=100&page=$page" \
               -o issues.json

          # Exit loop if no issues are returned
          if [ $(jq length issues.json) -eq 0 ]; then
            break
          fi

          # Close issues
          jq -c '.[] | .number' issues.json | while read -r issue; do
            RESPONSE=$(curl -s -w "%{http_code}" -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
                  -H "Accept: application/vnd.github.v3+json" \
                  "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$issue" \
                  -d "{\"state\": \"closed\", \"body\": \"$CUSTOM_MESSAGE\"}")

            HTTP_STATUS=$(echo $RESPONSE | rev | cut -c 1-3 | rev)
            RESPONSE_BODY=$(echo $RESPONSE | rev | cut -c 4- | rev)

            if [ "$HTTP_STATUS" -ge 200 ] && [ "$HTTP_STATUS" -lt 300 ]; then
              echo "Successfully closed issue $issue."
            else
              echo "Failed to close issue $issue. HTTP Status: $HTTP_STATUS, Response: $RESPONSE_BODY"
            fi
          done

          # Move to the next page
          ((page++))
        done
